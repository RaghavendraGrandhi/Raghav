{"Division":"SDDC","ProductGroup":[{"name":"Vcloud Air"},{"name":"Desktop"},{"name":"App delivery"}],"Leads":{"name":"PQL","Count":25}}
{"Division":"End User Computing","ProductGroup":[{"name":"Compute"},{"name":"Services"}],"Leads":{"name":"TQL","Count":23}}

result = LOAD '/Sai_source/Product.json' USING JsonLoader ('Division:chararray,ProductGroup: {(name:chararray)},Leads: (name:chararray, Count:int)');

Result set:

(SDDC,{(Vcloud Air),(Desktop),(App delivery)},(PQL,25))
(End User Computing,{(Compute),(Services)},(TQL,23))

{"Division":"SDDC","ProductGroup":[{"name":"Vcloud Air"},{"name":"Desktop"},{"name":"App delivery"}],"Leads":[{"name":"PQL","Count":25},{"name":"MQL","Count":26}]}
{"Division":"End User Computing","ProductGroup":[{"name":"Compute"},{"name":"Services"}],"Leads":[{"name":"TQL","Count":23},{"name":"HQL","Count":28}]}

result1 = LOAD '/Sai_source/Product4.json' USING JsonLoader ('Division:chararray,ProductGroup: {(name:chararray)}, Leads: {T:(name: chararray, Count: int)}');

Result set:
(SDDC,{(Vcloud Air),(Desktop),(App delivery)},{(PQL,25),(MQL,26)})
(End User Computing,{(Compute),(Services)},{(TQL,23),(HQL,28)})

result2 = FOREACH result1 GENERATE FLATTEN(Leads) AS (name,Count),Division;

Result:

(PQL,25,SDDC)
(MQL,26,SDDC)
(TQL,23,End User Computing)
(HQL,28,End User Computing)

result3 = FOREACH result1 GENERATE $0,$1,BagToString(Leads.name,'\t') as vl:chararray; 

Result:

(SDDC,{(Vcloud Air),(Desktop),(App delivery)},PQL       MQL)
(End User Computing,{(Compute),(Services)},TQL  HQL)

REGISTER '/Raghu/piggybank-0.11.0.jar';
REGISTER '/Raghu/json-simple-1.1.jar';
REGISTER '/Raghu/elephant-bird-hadoop-compat-4.1.jar';
REGISTER '/Raghu/elephant-bird-pig-4.1.jar';

REGISTER '/Raghu/elephant-bird-core-4.1.jar';
REGISTER 'Raghu/UDFProcess.jar';

loadJson = LOAD '/Sai_source/Product4.json' USING com.twitter.elephantbird.pig.load.JsonLoader('-nestedLoad') AS (json:map []);
loadJson1 = FOREACH loadJson GENERATE flatten(json#'Leads') as (a:map[]);

([name#PQL,Count#25])
([name#MQL,Count#26])
([name#TQL,Count#23])
([name#HQL,Count#28])

loadJson2 = FOREACH loadJson1 GENERATE FLATTEN(a#'Count');

(25)
(26)
(23)
(28)

{"tweets":[{"created_at":"Sat Nov 01 23:15:45 +0000 2014","id":5286804225,"id_str":"5286864225","text":"@Beace_ your nan makes me laugh with some of the things she comes out with","source":"\u003ca href=\"http:\/\/twitter.com\/download\/iphone\" rel=\"nofollow\"\u003eTwitter for iPhone\u003c\/a\u003e","truncated":false,"in_reply_to_status_id":52812992878592,"in_reply_to_status_id_str":"522","in_reply_to_user_id":398098,"in_reply_to_user_id_str":"3","in_reply_to_screen_name":"Be_","user":{"id":425,"id_str":"42433395","name":"SAINS","screen_name":"sa3","location":"Lincoln","profile_location":null,"description":"","url":null,"entities":{"description":{"urls":[]}},"protected":false,"followers_count":92,"friends_count":526,"listed_count":0,"created_at":"Mon May 25 16:18:05 +0000 2009","favourites_count":6,"utc_offset":0,"time_zone":"London","geo_enabled":true,"verified":false,"statuses_count":19,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"EDECE9","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme3\/bg.gif","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme3\/bg.gif","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/52016\/DGDCj67z_normal.jpeg","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/526\/DGDCj67z_normal.jpeg","profile_banner_url":"https:\/\/pbs.twimg.com\/profile_banners\/424395\/13743515","profile_link_color":"088253","profile_sidebar_border_color":"D3D2CF","profile_sidebar_fill_color":"E3E2DE","profile_text_color":"634047","profile_use_background_image":true,"default_profile":false,"default_profile_image":false,"following":false,"follow_request_sent":false,"notifications":false},"geo":null,"coordinates":null,"place":null,"contributors":null,"retweet_count":0,"favorite_count":1,"entities":{"hashtags":[],"symbols":[],"user_mentions":[{"screen_name":"e_","name":"\u2601\ufe0f effy","id":3998,"id_str":"398","indices":[0,15]}],"urls":[]},"favorited":false,"retweeted":false,"lang":"en"}]}


loadJson2 = LOAD '/Sai_source/Input2.json' USING com.twitter.elephantbird.pig.load.JsonLoader('-nestedLoad') AS (json:map []);
C = FOREACH loadJson2 GENERATE flatten(json#'tweets') as (m:map[]);
D = FOREACH C GENERATE FLATTEN(m#'text');

Result:

(@Beace_ your nan makes me laugh with some of the things she comes out with)


{"Partition":"10","Key":"618897","Properties2":[{"K":"A","T":"String","V":"M "}, {"K":"B","T":"String","V":"N"}, {"K":"D","T":"String","V":"O"}]}
{"Partition":"11","Key":"618900","Properties2":[{"K":"A","T":"String","V":"W"},{"K":"B","T":"String","V":"X"},{"K":"C","T":"String","V":"Y"},{"K":"D","T":"String","V":"Z"}]}

A = LOAD '/Sai_source/Partition.json' USING com.twitter.elephantbird.pig.load.JsonLoader('-nestedLoad') as (json:map[]);
B = FOREACH A GENERATE json#'Partition',json#'Key',json#'Properties2';
dump B;

REGISTER '/Raghu/CustomJsonLoader.jar';
V = LOAD '/apps/pig/json_sample' USING CustomJsonLoader();

G = LOAD '/Sai_source/Partition.json' USING CustomJsonLoader();

C = LOAD '/Sai_source/Partition.json' Using JsonLoader('Partition:chararray,Key:chararray,Properties2:{(K:chararray,T:chararray,V:chararray)}');


D = foreach C generate $0,$1,BagToString(Properties2.V,'\t') as vl:chararray;

store D into '/Sai_source/outPut2' USING PigStorage('|');

Output :

(10,618897,M    N       O)
(11,618900,W    X       Y       Z)